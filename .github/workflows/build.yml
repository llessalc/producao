name: Deploy Actions
on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v3

      - name: Instalar MongoDB e adicionar collection
        run: |
          docker pull mongodb/mongodb-community-server
          docker run --name mongo -p 27017:27017 -d mongodb/mongodb-community-server:latest
          sleep 15 # Aguardar 15 segundos para o MongoDB iniciar completamente

      - name: Criar Collection
        run: docker exec mongo bash -c 'echo "use producao" | mongosh && echo "db.createCollection(\"pedidos\")" | mongosh'


      - name: Configurar o JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Executar testes unit치rios
        run: |
          mvn test

#      - name: Generate JaCoco Badge
#        id: jacoco
#        uses: cicirello/jacoco-badge-generator@v2.0.1
#
#      - name: Log coverage percentage
#        run:
#          echo "coverage = ${{ steps.jacoco.ouputs.coverage }}"
#          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
#
#      - name: Upload JaCoCo coverage report
#        uses: actions/upload-artifact@v2
#        with:
#          name: jacoco-report
#          path: target/site/jacoco/

#  build:
#    runs-on: ubuntu-latest
#    needs: unit-test
#
#    services:
#      mongodb:
#        image: mongodb/mongodb-community-server
#        env:
#          MONGO_INITDB_DATABASE: producao
#        ports:
#          - 27017:27017
#        options: >-
#          --health-cmd mongo
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - name: Checkout do c칩digo
#        uses: actions/checkout@v3
#
#      - name: Configurar o JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'adopt'
#          java-version: '17'
#          package: '*.jar'
#
#      - name: Build com Maven
#        run: |
#          mvn package


#  publish:
#    runs-on: ubuntu-latest
#    needs: build
#
#    permissions:
#      contents: read
#      packages: write
#
#    services:
#      mongodb:
#        image: mongodb/mongodb-community-server
#        env:
#          MONGO_INITDB_DATABASE: producao
#        ports:
#          - 27017:27017
#        options: >-
#          --health-cmd mongo
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - name: Checkout do c칩digo
#        uses: actions/checkout@v3
#      - name: Configurar o JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'adopt'
#          java-version: '17'
#          package: '*.jar'
#      - name: Publish package
#        run: |
#          mvn --batch-mode deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}